<style lang="less">
.empty-cart {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  image {
    width: 180rpx;
    height: 180rpx;
  }
  .empty-cart-text {
    line-height: 3;
    color: #999;
  }
  .shop-btn {
    background: #ed601b;
    border-radius: 4px;
    padding: 20rpx 30rpx;
    color: #fff;
  }
}

.cart-body {
  padding: 20rpx;
  // 空地址
  .empty-address {
    height: 60px;
    display: flex;
    justify-content: center;
    align-items: center;
    .add-btn {
      padding: 20rpx 30rpx;
      background: #a7a6a7;
      color: white;
      border-radius: 4px;
      font-size: 16px;
    }
  }
  // 地址
  .address {
    .user-info,
    .user-address {
      height: 60rpx;
      line-height: 60rpx;
      font-size: 16px;
      word-break:break-all;
      display:-webkit-box;
      -webkit-line-clamp:1;
      -webkit-box-orient:vertical;
      overflow:hidden;
      display: flex;
      justify-content: space-between;
    }
  }
  // 图片边框
  .cart-border {
    height: 15rpx;
    width: 750rpx;
    border-bottom: 15rpx solid #eee;
  }
  // 商店名字
  .shop-name {
    font-size: 16px;
    height: 60rpx;
    line-height: 60rpx;
    border-bottom: 1px solid #eee;
    margin-bottom: 20rpx;
  }
  // 购物车商品项
  .cart-list {
    margin-bottom: 100rpx;
  }
  .cart-list-item {
    display: flex;
    margin-top: 20rpx;
    .cart-list-item-in {
      display: flex;
      .cart-list-item-in:last-child{
        padding-bottom: 120rpx;
        &>.cart-goods-info {
          border: none;
        }
      }
    }
    .cart-goods-status {
      width: 60rpx;
      align-self: center;
    }
    .cart-goods-info {
      flex: 1;
      display: flex;
      padding-bottom: 20rpx;
      border-bottom: 1px solid #eee;
      image {
        align-self: center;
        width: 150rpx;
        height: 150rpx;
        flex-shrink: 0;
        margin-right: 20rpx;
      }
      .goods-info-box {
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        width: 100%;
        .goods-title {
          font-size: 14px;
          margin-bottom: 20rpx;
          word-break:break-all;
          display:-webkit-box;
          -webkit-line-clamp:2;
          -webkit-box-orient:vertical;
          overflow:hidden;
        }
        .info-box-bottom {
          display: flex;
          justify-content: space-between;
          height: 60rpx;
          line-height: 60rpx;
          .goods-price {
            color: #ff2d4a;
            font-size: 16px;
          }
          .count-add,
          .count-minus {
            display: inline-block;
            text-align: center;
            border: 1px solid #666666;
            height: 60rpx;
            width: 60rpx;
            box-sizing: border-box;
          }
          .count {
            font-size: 14px;
            margin: 0 20rpx;
            height: 60rpx;
            width: 60rpx;
          }
        }
      }
    }
    .delGoods {
      background-color: #ff2d4a;
      color: #fff;
      height: 100%;
      display: flex;
      align-items: center;
      font-size: 16px;
      padding: 0 20rpx;
    }
  }
}
// footer
.footer {
  height: 120rpx;
  display: flex;
  position: fixed;
  bottom: 0;
  left: 0;
  right: 0;
  background: #fff;
  z-index: 999;
  .footer-item {
    flex: 1;
    display: flex;
    width: 250rpx;
    font-size: 16px;
    .total-price {
      color:#ff2d4a;
    }
  }

  .item-left {
    align-items: center;
    padding-left: 20rpx;
    &>span+span {
      margin-left: 20rpx;
    }
  }
  .item-center {
    flex-direction: column;
    justify-content: center;
    .express {
      font-size: 14px;
      color: #a6a6a6;
    }
  }
  .item-right {
    justify-content: center;
    align-items: center;
    background: #ff2d4a;
    color: #fff;
  }
}
.active {
  color: #ff2d4a;
}
</style>

<template>
  <div class="cart">
    <div class="empty-cart" v-if="cartGoodsList.length === 0">
      <image src="/static/images/cart_empty@2x.png" mode="aspectFill" />
      <div class="empty-cart-text">购物车还是空的</div>
      <div class="shop-btn" @tap="goToCategory">去逛逛</div>
    </div>

    <div class="cart-body" v-else>
      <div class="empty-address" v-if="isAddressEmpty">
        <div class="add-btn" @tap="addAddress">添加地址</div>
      </div>
      <div class="address" v-else>
        <div class="user-info">
          <span>收货人：{{addressInfo.uname}}</span>
          <span>{{addressInfo.mobile}}</span>
        </div>
        <div class="user-address">
          <span>收货地址：{{addressInfo.address}}</span>
          <van-icon name="edit" @tap="addAddress" />
        </div>
      </div>
      <image class="cart-border" src="/static/images/cart_border@2x.png"></image>
      <div class="shop-name">
        <van-icon name="shop-o" />
        <span>优购生活馆</span>
      </div>
      <div class="cart-list">
        <div class="cart-list-item" v-for="(item, index) in cartGoodsList" :key="index">
          <van-swipe-cell style="width: 100%;" right-width="{{ 60 }}">
            <div class="cart-list-item-in">
              <div @tap="changeStatus(index)" class="cart-goods-status">
                <van-icon name="checked" color="red" v-if="item.selectStatus" />
                <van-icon name="circle" color="red" v-else />
              </div>
              <div class="cart-goods-info">
                <image :src="item.smallImg" mode="aspectFill" />
                <div class="goods-info-box">
                  <h3 class="goods-title">{{item.goodsTitle}}</h3>
                  <div class="info-box-bottom">
                    <span class="goods-price">￥{{item.goodsPrice}}</span>
                    <div class="goods-count">
                      <van-stepper class="stepper" value="{{item.goodsNum}}" max="10" integer bind:change="changeNum($event, item.goodsId)" button-size="20px" />
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <view class="delGoods" slot="right" @tap="delGoods(index)">删除</view>
          </van-swipe-cell>
        </div>
      </div>
    </div>

    <!-- footer -->
    <div class="footer">
      <div class="footer-item item-left" @tap="checkAll(isAllChoose)">
        <van-icon name="checked" color="red" v-if="isAllChoose" />
        <van-icon name="circle" color="red" v-else />
        <span>全选</span>
      </div>
      <div class="footer-item item-center">
        <div>合计: <span class="total-price">{{subPrice}}</span></div>
        <div class="express">包含运费</div>
      </div>
      <div class="footer-item item-right" @tap="addStatement">
        结算({{totalGoodsNum}})
      </div>
    </div>
    
  </div>
</template>

<script>
  import wepy from '@wepy/core'
  wepy.page({
    data: {
      addressInfo: {},
      cartGoodsList: []
    },
    onShow() {
      this.cartGoodsList = wx.getStorageSync('cartGoodsList')
      /* 自：页面跳转
        let addressInfoList = wx.getStorageSync('addressInfo') || []
        if (addressInfoList.length > 0) {
          let idx = addressInfoList.findIndex(item => item.defaultAddress === true)
          if (idx !== -1) {
            this.addressInfo = addressInfoList[idx]
          } else {
            this.addressInfo = addressInfoList[0]
          }
      } */
      this.addressInfo = wx.getStorageSync('userAddressInfo') || {}
    },
    watch: {
      cartGoodsList: {
        handler (newval) {
          wx.setStorageSync('cartGoodsList', newval)
          wx.setTabBarBadge({
            index: 2,
            text: this.totalGoodsNum + ''
          })
        },
        deep: true
      }
    },
    methods: {
      changeNum (e, id) {
        // console.log(e.$wx.detail)
        // console.log(id)
        let idx = this.cartGoodsList.findIndex(item => item.goodsId === id)
        if (idx !== -1) {
          this.cartGoodsList[idx].goodsNum = +e.$wx.detail
        }
      },
      addAddress () {
        /* 自：页面跳转
        wx.navigateTo({
          url: '/pages/address'
        }) */
        wx.chooseAddress({
          success: (res) => {
            let userAddressInfo = {
              uname: res.userName,
              mobile: res.telNumber,
              address: res.provinceName + res.cityName + res.countyName + res.detailInfo
            }
            wx.setStorageSync('userAddressInfo', userAddressInfo)
            this.addressInfo = userAddressInfo
          }
        })
      },
      goToCategory () {
        wx.switchTab({
          url: `/pages/category/index`
        })
      },
      changeStatus (index) {
        this.cartGoodsList[index].selectStatus = !this.cartGoodsList[index].selectStatus
      },
      checkAll (flag) {
        this.cartGoodsList.map(item => {
          item.selectStatus = !flag
        })
      },
      delGoods (i) {
        wx.showModal({
          title: '提示',
          content: '确认删除该商品吗？',
          success: (res) => {
            if (res.confirm) {
              this.cartGoodsList.splice(i, 1)
            } else if (res.cancel) {
              wx.showToast({
                title: '已取消',
                icon: 'none',
                duration: 1000
              })
            }
          }
        })
      },
      addStatement () {
        let orderList = this.cartGoodsList.filter(item => item.selectStatus)
        orderList.map(item => {
          item.isOrder = false
        })
        wx.setStorageSync('orderList', orderList)
        wx.navigateTo({
          url: '/pages/order'
        })
      }
    },
    computed: {
      isAddressEmpty() {
        return Object.keys(this.addressInfo).length === 0
      },
      isAllChoose () {
        return this.cartGoodsList.every(item => item.selectStatus)
      },
      subPrice () {
        let subprice = 0
        this.cartGoodsList.map(item => {
          if (item.selectStatus) {
            subprice += item.goodsNum * item.goodsPrice
          }
        })
        return subprice.toFixed(2)
      },
      totalGoodsNum () {
        let total = 0
        this.cartGoodsList.map(item => {
          if (item.selectStatus) {
            total += item.goodsNum
          }
        })
        return total
      }
    }
  })
</script>
<config>
  {
    navigationBarTitleText: '购物车',
    usingComponents: {
      'van-icon': '../static/vant/icon/index',
      'van-stepper': '../static/vant/stepper/index',
      'van-swipe-cell': '../static/vant/swipe-cell/index'
    }
  }
</config>
